import { writeFile } from 'fs/promises';
import { strict as assert } from 'assert';
import fetch from 'cross-fetch';

const requestPayload = (type: 'topselling_free' | 'topgrossing' | 'topselling_paid', length: number) => [
    'vyAe2',
    `[[null,[[8,[20,${length}]],true,null,[64,1,195,71,8,72,9,10,11,139,12,16,145,148,150,151,152,27,30,31,96,32,34,163,100,165,104,169,108,110,113,55,56,57,122],[null,null,[[[true],null,[[[]]],null,null,null,null,[null,2],null,null,null,null,null,null,[1],null,null,null,null,null,null,null,[1]],[null,[[[]]]],[null,[[[]]],null,[true]],[null,[[[]]]],null,null,null,null,[[[[]]]],[[[[]]]]],[[[[7,1],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,31],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,104],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,9],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,8],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,27],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,12],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,65],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,110],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,88],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,11],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,56],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,55],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,96],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,10],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,122],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,72],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,71],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,64],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,113],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,139],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,150],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,169],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,165],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,151],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,163],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,32],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,16],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,108],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[7,100],[[1,73,96,103,97,58,50,92,52,112,69,19,31,101,123,74,49,80,38,20,10,14,79,43,42,139]]],[[9,1],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,31],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,104],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,9],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,8],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,27],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,12],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,65],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,110],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,88],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,11],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,56],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,55],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,96],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,10],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,122],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,72],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,71],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,64],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,113],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,139],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,150],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,169],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,165],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,151],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,163],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,32],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,16],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,108],[[1,7,9,24,12,31,5,15,27,8,13]]],[[9,100],[[1,7,9,24,12,31,5,15,27,8,13]]],[[17,1],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,31],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,104],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,9],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,8],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,27],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,12],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,65],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,110],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,88],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,11],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,56],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,55],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,96],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,10],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,122],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,72],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,71],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,64],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,113],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,139],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,150],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,169],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,165],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,151],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,163],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,32],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,16],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,108],[[1,7,9,25,13,31,5,41,27,8,14]]],[[17,100],[[1,7,9,25,13,31,5,41,27,8,14]]],[[10,1],[[1,7,6,9]]],[[10,31],[[1,7,6,9]]],[[10,104],[[1,7,6,9]]],[[10,9],[[1,7,6,9]]],[[10,8],[[1,7,6,9]]],[[10,27],[[1,7,6,9]]],[[10,12],[[1,7,6,9]]],[[10,65],[[1,7,6,9]]],[[10,110],[[1,7,6,9]]],[[10,88],[[1,7,6,9]]],[[10,11],[[1,7,6,9]]],[[10,56],[[1,7,6,9]]],[[10,55],[[1,7,6,9]]],[[10,96],[[1,7,6,9]]],[[10,10],[[1,7,6,9]]],[[10,122],[[1,7,6,9]]],[[10,72],[[1,7,6,9]]],[[10,71],[[1,7,6,9]]],[[10,64],[[1,7,6,9]]],[[10,113],[[1,7,6,9]]],[[10,139],[[1,7,6,9]]],[[10,150],[[1,7,6,9]]],[[10,169],[[1,7,6,9]]],[[10,165],[[1,7,6,9]]],[[10,151],[[1,7,6,9]]],[[10,163],[[1,7,6,9]]],[[10,32],[[1,7,6,9]]],[[10,16],[[1,7,6,9]]],[[10,108],[[1,7,6,9]]],[[10,100],[[1,7,6,9]]],[[1,1],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,31],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,104],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,9],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,8],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,27],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,12],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,65],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,110],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,88],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,11],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,56],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,55],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,96],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,10],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,122],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,72],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,71],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,64],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,113],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,139],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,150],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,169],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,165],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,151],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,163],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,32],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,16],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,108],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[1,100],[[1,5,14,38,19,29,34,4,12,11,6,30,43,40,42,16,10]]],[[4,1],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,31],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,104],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,9],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,8],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,27],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,12],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,65],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,110],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,88],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,11],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,56],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,55],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,96],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,10],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,122],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,72],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,71],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,64],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,113],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,139],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,150],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,169],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,165],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,151],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,163],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,32],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,16],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,108],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[4,100],[[1,3,5,4,7,6,11,19,21,17,15,12,16,20]]],[[3,1],[[1,5,14,4,10,17]]],[[3,31],[[1,5,14,4,10,17]]],[[3,104],[[1,5,14,4,10,17]]],[[3,9],[[1,5,14,4,10,17]]],[[3,8],[[1,5,14,4,10,17]]],[[3,27],[[1,5,14,4,10,17]]],[[3,12],[[1,5,14,4,10,17]]],[[3,65],[[1,5,14,4,10,17]]],[[3,110],[[1,5,14,4,10,17]]],[[3,88],[[1,5,14,4,10,17]]],[[3,11],[[1,5,14,4,10,17]]],[[3,56],[[1,5,14,4,10,17]]],[[3,55],[[1,5,14,4,10,17]]],[[3,96],[[1,5,14,4,10,17]]],[[3,10],[[1,5,14,4,10,17]]],[[3,122],[[1,5,14,4,10,17]]],[[3,72],[[1,5,14,4,10,17]]],[[3,71],[[1,5,14,4,10,17]]],[[3,64],[[1,5,14,4,10,17]]],[[3,113],[[1,5,14,4,10,17]]],[[3,139],[[1,5,14,4,10,17]]],[[3,150],[[1,5,14,4,10,17]]],[[3,169],[[1,5,14,4,10,17]]],[[3,165],[[1,5,14,4,10,17]]],[[3,151],[[1,5,14,4,10,17]]],[[3,163],[[1,5,14,4,10,17]]],[[3,32],[[1,5,14,4,10,17]]],[[3,16],[[1,5,14,4,10,17]]],[[3,108],[[1,5,14,4,10,17]]],[[3,100],[[1,5,14,4,10,17]]],[[2,1],[[1,5,7,4,13,16,12]]],[[2,31],[[1,5,7,4,13,16,12]]],[[2,104],[[1,5,7,4,13,16,12]]],[[2,9],[[1,5,7,4,13,16,12]]],[[2,8],[[1,5,7,4,13,16,12]]],[[2,27],[[1,5,7,4,13,16,12]]],[[2,12],[[1,5,7,4,13,16,12]]],[[2,65],[[1,5,7,4,13,16,12]]],[[2,110],[[1,5,7,4,13,16,12]]],[[2,88],[[1,5,7,4,13,16,12]]],[[2,11],[[1,5,7,4,13,16,12]]],[[2,56],[[1,5,7,4,13,16,12]]],[[2,55],[[1,5,7,4,13,16,12]]],[[2,96],[[1,5,7,4,13,16,12]]],[[2,10],[[1,5,7,4,13,16,12]]],[[2,122],[[1,5,7,4,13,16,12]]],[[2,72],[[1,5,7,4,13,16,12]]],[[2,71],[[1,5,7,4,13,16,12]]],[[2,64],[[1,5,7,4,13,16,12]]],[[2,113],[[1,5,7,4,13,16,12]]],[[2,139],[[1,5,7,4,13,16,12]]],[[2,150],[[1,5,7,4,13,16,12]]],[[2,169],[[1,5,7,4,13,16,12]]],[[2,165],[[1,5,7,4,13,16,12]]],[[2,151],[[1,5,7,4,13,16,12]]],[[2,163],[[1,5,7,4,13,16,12]]],[[2,32],[[1,5,7,4,13,16,12]]],[[2,16],[[1,5,7,4,13,16,12]]],[[2,108],[[1,5,7,4,13,16,12]]],[[2,100],[[1,5,7,4,13,16,12]]]]]],null,null,[[[1,2],[10,8,9],[],[]]]],[2,"${type}","APPLICATION"]]]`,
    null,
    'generic',
];

const tmp = async (data: unknown, filename_prefix?: string) => {
    console.dir(data, { depth: null });
    await writeFile(`./${filename_prefix ? `${filename_prefix}.` : ''}tmp.json`, JSON.stringify(data, null, 4));
};

// TODO:
// * Category filtering?
// * More than 660 apps?
// * Easier request payload?

(async () => {
    const res = await fetch('https://play.google.com/_/PlayStoreUi/data/batchexecute', {
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',
        },
        body: `f.req=${encodeURIComponent(JSON.stringify([[requestPayload('topselling_free', 50)]]))}`,
        method: 'POST',
    }).then((r) => r.text());

    const payload = JSON.parse(res.split('\n')[2])[0];
    assert(payload, 'Has payload.');
    assert(payload[0] === 'wrb.fr' && payload[1] === 'vyAe2', 'Correct header.');

    const data = JSON.parse(payload[2]);
    assert(data, 'Has inner data.');

    assert(data.length === 1, 'One top-level array entry.');
    assert(
        data[0][1][0].length === 29 &&
            data[0][1][0][3].length === 1 &&
            data[0][1][0].filter((i: unknown) => i === null).length === 27,
        'Expected inner data structure.'
    );
    const entries = data[0][1][0][28][0];
    assert(entries.length > 0, 'Has data.');

    await tmp(entries);

    const parsed = entries.map((e) => {
        assert(e.length === 3 && [0, 1, 2].includes(e[2]), 'Expected entry structure.');

        const meta = e[0];

        assert(meta.length === 23, 'Meta length.');
        assert(meta[8][8][0] === 'CAE=', 'Weird buy param.');
        assert(e[1].length === 1 && e[1][0].length === 3, 'Expected weird second meta object structure.');
        const empty_meta = e[1][0].flat(100);
        assert(
            empty_meta.filter((i: unknown) => i === null).length === empty_meta.length - 1 && empty_meta[3] === meta[5],
            'Weird second meta object only has category.'
        );

        return {
            app_id: meta[0][0],
            icon_url: meta[1][3][2],
            screenshot_urls: meta[2].map((s) => s[3][2]),
            name: meta[3],
            rating: meta[4][1],
            category: meta[5],
            price: meta[8][1][0].join(' ').trim(),
            buy_url: meta[8][6][5][2],
            store_path: meta[10][4][2],
            trailer_url: meta[12]?.[0][0][3][2],
            description: meta[13][1],
            developer: meta[14],
            downloads: meta[15],
            cover_image_url: meta[22][3][2],
        };
    });
    await tmp(parsed, 'parsed');

    assert(
        parsed
            .map((p) =>
                Object.entries(p).filter(([key, val]) => (val === undefined || val === null) && key !== 'trailer_url')
            )
            .filter((a) => a.length > 0).length === 0,
        'Only `trailer_url` is ever undefined.'
    );
    console.log(parsed.length);
})();
